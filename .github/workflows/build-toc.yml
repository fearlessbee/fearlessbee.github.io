name: Build Static Blog

on:
  push:
    branches:
      - main # Or 'master'
    paths:
      - 'blogs/**.md'
      - 'post.template.html' # Re-build if post template changes
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # We need to give the bot permission to write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - uses: docker://pandoc/core:3.5

      - name: Build HTML files from Markdown
        run: |
          # Create the output directory if it doesn't exist
          mkdir -p posts

          # Start the TOC list for the index page
          TOC_HTML="<ul>"

          # Loop through all markdown files in the blogs directory, newest first
          for post in $(ls -t blogs/*.md); do
            # Get the base filename without the .md extension
            FILENAME=$(basename "$post" .md)

            # --- 1. COMPILE THE INDIVIDUAL POST HTML ---
            
            # Use Pandoc to convert markdown to an HTML fragment
            # The fragment will be injected into our post template
            CONTENT=$(pandoc "$post" -f markdown -t html)
            
            # Get the first H1 from the markdown for the title
            TITLE=$(grep -m 1 '^# ' "$post" | sed 's/# //')

            # Create the final HTML for the post
            # Use sed to replace placeholders in the template
            # Note the use of a temp file to handle multi-line content
            echo "$CONTENT" > temp_content.html
            sed -e "s|<!-- TITLE_PLACEHOLDER -->|$TITLE|" \
                -e "/<!-- POST_CONTENT_PLACEHOLDER -->/r temp_content.html" \
                -e "s|<!-- POST_CONTENT_PLACEHOLDER -->||" \
                -e "s|<!-- DATE_PLACEHOLDER -->|$(date)|" \
                post.template.html > "posts/$FILENAME.html"
            
            # --- 2. ADD AN ENTRY TO THE TOC ---
            
            # Create a clean title for the TOC
            TOC_TITLE=$(echo "$FILENAME" | sed 's/-/ /g')
            TOC_HTML+="<li><a href=\"posts/$FILENAME.html\">$TOC_TITLE</a></li>"
            
            echo "✅ Processed $FILENAME.html"
          done

          # Close the TOC list
          TOC_HTML+="</ul>"

          # --- 3. COMPILE THE INDEX.HTML PAGE ---
          sed -i "s|<!-- TOC_PLACEHOLDER -->|$TOC_HTML|" index.template.html
          mv index.template.html index.html
          echo "✅ Generated index.html"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add index.html posts/
          # Check if there are changes to commit and push
          if ! git diff --staged --quiet; then
            git commit -m "docs: build static site"
            git push
          else
            echo "No changes to commit."
          fi
